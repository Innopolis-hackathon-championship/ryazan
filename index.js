const productsDB = {
    1: { name: '1', price: 10, quantity: 5 },
    2: { name: '2', price: 20, quantity: 3 },
    3: { name: '3', price: 30, quantity: 8 },
    4: { name: '4', price: 40, quantity: 2 },
    5: { name: '5', price: 50, quantity: 5 },
    6: { name: '6', price: 60, quantity: 4 },
    7: { name: '7', price: 70, quantity: 6 },
    8: { name: '8', price: 80, quantity: 7 },
};
const QRCode = require('qrcode');
arr = [5,3,3,2,4,4,6,7];
let ratings = [];

const usersDB = {
    '5441406901': { balance: 200 },
    '1011516006': { balance: 200 },
    '1394477724': { balance: 200 },
    '137856067':{ balance: 200 },
    '2143638774':{ balance: 200 }
};
const TelegramBot = require('node-telegram-bot-api');

const token = '6542715904:AAEV5mo9FZvSzUAAU9uI6cjJEPWrXE9MG0k';
const whitelist = new Set(['5441406901', '1011516006','1394477724','137856067','2143638774']);

const bot = new TelegramBot(token, { polling: true });

let cart = [];

const mainMenu = {
    reply_markup: {
        keyboard: [['üìù –ú–µ–Ω—é', 'üõí –ö–æ—Ä–∑–∏–Ω–∞']],
        resize_keyboard: true,
    },
};

const ratingKeyboard = {
    reply_markup: {
        inline_keyboard: [
            [{ text: "1", callback_data: "1" }, { text: "2", callback_data: "2" }],
            [{ text: "3", callback_data: "3" }, { text: "4", callback_data: "4" }],
            [{ text: "5", callback_data: "5" }]
        ]
    }
};

const productMenu = {
    reply_markup: {
        keyboard: [
            ['1', '2', '3'],
            ['4', '5', '6'],
            ['7', '8', 'üõí –ö–æ—Ä–∑–∏–Ω–∞'],
            ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
        ],
        resize_keyboard: true,
    },
};
const Last = {
    reply_markup: {
        keyboard: [
            ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
        ],
        resize_keyboard: true,
    },
};
const checkoutMenu = {
    reply_markup: {
        keyboard: [
            ['üö¥ –î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º', 'üöó –°–∞–º–æ–≤—ã–≤–æ–∑'],
            ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
        ],
        resize_keyboard: true,
    },
};

const removeItemMenu = {
    reply_markup: {
        keyboard: [
            ['–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
        ],
        resize_keyboard: true,
    },
};

bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    if (whitelist.has(chatId.toString())) {
        bot.sendPhoto(chatId, 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPYe7EHqRXZrcpS8TL0dbH6Y3JCW8xtDUQmA&usqp=CAU')
        bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.', mainMenu);
    } else {
        bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.');
    }
});
bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    if (!whitelist.has(chatId.toString())) {
        bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.');
    } else {
        switch (msg.text) {
            case 'üìù –ú–µ–Ω—é':
                bot.sendMessage(chatId,`1Ô∏è‚É£ –°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ 30 —Ä—É–± (${arr[0]} –æ—Å—Ç–∞–ª–æ—Å—å)
2Ô∏è‚É£ –í–∞—Ç—Ä—É—à–∫–∞ —Å —Ç–≤–æ—Ä–æ–≥–æ–º 30 —Ä—É–± (${arr[1]} –æ—Å—Ç–∞–ª–æ—Å—å)
3Ô∏è‚É£ –ü–∏—Ü—Ü–∞ 50 —Ä—É–± (${arr[2]} –æ—Å—Ç–∞–ª–æ—Å—å)
4Ô∏è‚É£ –ë—É–ª–æ—á–∫–∞ —Å –ø–æ–≤–∏–¥–ª–æ–º 25 —Ä—É–± (${arr[3]} –æ—Å—Ç–∞–ª–æ—Å—å)
5Ô∏è‚É£ –ë—É–ª–æ—á–∫–∞ —Å –±–∞–Ω–∞–Ω–æ–º 25 —Ä—É–± (${arr[4]} –æ—Å—Ç–∞–ª–æ—Å—å)
6Ô∏è‚É£ –ß–∞–π 20 —Ä—É–± (${arr[5]} –æ—Å—Ç–∞–ª–æ—Å—å)
7Ô∏è‚É£ –ö–æ—Ñ–µ 30 —Ä—É–± (${arr[6]} –æ—Å—Ç–∞–ª–æ—Å—å)
8Ô∏è‚É£ –°–æ–∫ 25 —Ä—É–± (${arr[7]} –æ—Å—Ç–∞–ª–æ—Å—å)
`)
                bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ –º–µ–Ω—é:', productMenu);
                break;
            case 'üõí –ö–æ—Ä–∑–∏–Ω–∞':
                if (cart.length === 0) {
                    bot.sendMessage(chatId, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É.', mainMenu);
                } else {
                    let cartMessage = '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n';
                    let totalPrice = 0;
                    cart.forEach((product, index) => {
                        cartMessage += `${index + 1}. ${product.name} - $${product.price}\n`;
                        totalPrice += product.price;
                    });
                    cartMessage += `–û–±—â–∞—è —Å—É–º–º–∞: $${totalPrice}\n`;
                    const userId = chatId.toString();
                    if (usersDB[userId] && usersDB[userId].balance >= totalPrice) {
                        cartMessage += '‚úÖÔ∏è–£ –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã. –ù–∞–∂–º–∏—Ç–µ "–û–ø–ª–∞—Ç–∏—Ç—å" –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.‚úÖÔ∏è';
                        bot.sendMessage(chatId, cartMessage, {
                            reply_markup: {
                                keyboard: [['–û–ø–ª–∞—Ç–∏—Ç—å', '–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥']],
                                resize_keyboard: true,
                            },
                        });
                    } else {
                        cartMessage += '‚ùåÔ∏è–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã.‚ùåÔ∏è';
                        bot.sendMessage(chatId, cartMessage, {
                            reply_markup: {
                                keyboard: [['–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥']],
                                resize_keyboard: true,
                            },
                        })
                    }
                }
                break;
            case '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
                bot.sendMessage(chatId, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', mainMenu);
                break;
            case '–û–ø–ª–∞—Ç–∏—Ç—å':
                bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:', checkoutMenu);
                break;
            case 'üö¥ –î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º':
                bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–æ—Å—Ç–∞–≤–∫—É –∫—É—Ä—å–µ—Ä–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!');
                bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω:", ratingKeyboard);
                bot.on('callback_query', (query) => {
                    const rating = query.data;
                    const chatId = query.message.chat.id;
                    ratings.push(parseInt(rating));
                    bot.sendMessage(chatId, `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É: ${rating}/5. –û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.`,Last);
                });
                while(cart.length > 0)
                    cart.pop();

                break;
            case 'üöó –°–∞–º–æ–≤—ã–≤–æ–∑':
                const userId = chatId.toString();
                const codeText = ` Order ID: ${Math.floor(Math.random() * 1000)}`; // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è QR-–∫–æ–¥–∞
                QRCode.toFile(`qrcodes/${userId}.png`, codeText, {
                    color: {
                        dark: '#000', // –¶–≤–µ—Ç –¥–ª—è –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
                        light: '#fff' // –¶–≤–µ—Ç –¥–ª—è –Ω–µ–∑–∞—Ç–µ–º–Ω–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
                    }
                }, function (err) {
                    if (err) throw err;
                    bot.sendPhoto(chatId, `qrcodes/${userId}.png`, {caption: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—ä—è–≤–∏—Ç–µ —ç—Ç–æ—Ç QR-–∫–æ–¥ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞.'});
                });
                bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω:", ratingKeyboard);
                bot.on('callback_query', (query) => {
                    const rating = query.data;
                    const chatId = query.message.chat.id;
                    ratings.push(parseInt(rating));
                    bot.sendMessage(chatId, `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É: ${rating}/5. –û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.`,Last);
                });
                while(cart.length > 0)
                    cart.pop();
                break;

            case '–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä':
                if (cart.length > 0) {
                    cart.pop();
                    bot.sendMessage(chatId, '–ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.', removeItemMenu);
                    let cartMessage = '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n';
                    let totalPrice = 0;
                    cart.forEach((product, index) => {
                        cartMessage += `${index + 1}. ${product.name} - $${product.price}\n`;
                        totalPrice += product.price;
                    });
                } else {
                    bot.sendMessage(chatId, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.', mainMenu);
                }
                break;
            default:
                const productId = msg.text.toLowerCase().replace('product ', '');
                if (productsDB[productId] && productsDB[productId].quantity > 0) {
                    if (productsDB[productId].quantity > 0) {
                        const productIndex = cart.findIndex(item => item.id === productId);
                        if (productIndex !== -1) {
                            cart[productIndex].quantity += 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
                        } else {
                            cart.push({...productsDB[productId], quantity: 1}); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
                        }
                        productsDB[productId].quantity -= 1; // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
                        bot.sendMessage(chatId, `–¢–æ–≤–∞—Ä "${productsDB[productId].name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.`, productMenu);
                    } else {
                        bot.sendMessage(chatId, `–¢–æ–≤–∞—Ä "${productsDB[productId].name}" –∑–∞–∫–æ–Ω—á–∏–ª—Å—è.`, productMenu);
                    }
                    arr[productId - 1] -= 1;
                } else {
                    //bot.sendMessage(chatId, '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.', mainMenu);
                }
            }
        }
    });
